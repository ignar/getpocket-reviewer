# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/tty-box/all/tty-box.rbi
#
# tty-box-0.6.0

module TTY
end
module TTY::Box
  def bottom_border(title, width, border, style); end
  def bottom_left_corner(border); end
  def bottom_right_corner(border); end
  def bottom_space_taken(title, border); end
  def bottom_titles_size(title); end
  def color; end
  def corner_bottom_left_char(border = nil); end
  def corner_bottom_right_char(border = nil); end
  def corner_top_left_char(border = nil); end
  def corner_top_right_char(border = nil); end
  def cross_char(border = nil); end
  def cursor; end
  def divider_down_char(border = nil); end
  def divider_left_char(border = nil); end
  def divider_right_char(border = nil); end
  def divider_up_char(border = nil); end
  def error(message, **opts); end
  def extract_style(style); end
  def format(content, width, padding, align); end
  def frame(*content, top: nil, left: nil, width: nil, height: nil, align: nil, padding: nil, title: nil, border: nil, style: nil); end
  def infer_dimensions(lines, padding); end
  def info(message, **opts); end
  def line_char(border = nil); end
  def pipe_char(border = nil); end
  def self.bottom_border(title, width, border, style); end
  def self.bottom_left_corner(border); end
  def self.bottom_right_corner(border); end
  def self.bottom_space_taken(title, border); end
  def self.bottom_titles_size(title); end
  def self.color; end
  def self.corner_bottom_left_char(border = nil); end
  def self.corner_bottom_right_char(border = nil); end
  def self.corner_top_left_char(border = nil); end
  def self.corner_top_right_char(border = nil); end
  def self.cross_char(border = nil); end
  def self.cursor; end
  def self.divider_down_char(border = nil); end
  def self.divider_left_char(border = nil); end
  def self.divider_right_char(border = nil); end
  def self.divider_up_char(border = nil); end
  def self.error(message, **opts); end
  def self.extract_style(style); end
  def self.format(content, width, padding, align); end
  def self.frame(*content, top: nil, left: nil, width: nil, height: nil, align: nil, padding: nil, title: nil, border: nil, style: nil); end
  def self.infer_dimensions(lines, padding); end
  def self.info(message, **opts); end
  def self.line_char(border = nil); end
  def self.pipe_char(border = nil); end
  def self.success(message, **opts); end
  def self.top_border(title, width, border, style); end
  def self.top_left_corner(border); end
  def self.top_right_corner(border); end
  def self.top_space_taken(title, border); end
  def self.top_titles_size(title); end
  def self.warn(message, **opts); end
  def success(message, **opts); end
  def top_border(title, width, border, style); end
  def top_left_corner(border); end
  def top_right_corner(border); end
  def top_space_taken(title, border); end
  def top_titles_size(title); end
  def warn(message, **opts); end
end
class TTY::Box::Border
  def bottom; end
  def bottom?; end
  def bottom_left; end
  def bottom_left?; end
  def bottom_right; end
  def bottom_right?; end
  def check_name(key, value); end
  def initialize(type: nil, top: nil, top_left: nil, top_right: nil, left: nil, right: nil, bottom: nil, bottom_left: nil, bottom_right: nil); end
  def left; end
  def left?; end
  def right; end
  def right?; end
  def self.parse(border); end
  def top; end
  def top?; end
  def top_left; end
  def top_left?; end
  def top_right; end
  def top_right?; end
  def type; end
end
